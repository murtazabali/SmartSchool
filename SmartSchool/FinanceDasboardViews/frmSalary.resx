<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>