<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>