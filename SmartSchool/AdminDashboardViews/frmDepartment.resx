<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>