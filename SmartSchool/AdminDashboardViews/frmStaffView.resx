<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        FPMAAAAASUVORK5CYII=
</value>
  </data>
</root>